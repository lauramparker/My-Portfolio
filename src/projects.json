[
    {
        "title": "Travel Journal",
        "image": "https://github.com/lauramparker/My-Portfolio/blob/main/public/gifs/BREWFINDER.gif",
        "description": "Travel Journal is a Node.js application with a MySQL database, Elasticsearch search engine, and Passport authentication. Handlebars and jQuery support the front-end rendering. The application allows users to create, edit and dynamically search travel reviews.",
        "technologies": ["Express/Node.js", "MySQL", "Passport", "ElasticSearch", "Handlebars"],
        "repo": "https://github.com/lauramparker/Travel-Journal",
        "deploy": "https://travel-journal-lmp.herokuapp.com/"
    },

    {
        "title": "React Weather App",
        "image": "https://github.com/lauramparker/My-Portfolio/blob/main/public/gifs/My-Weather-App.gif",
        "description": "React-Weather-App is a redux-style React application featuring advanced React hooks, providers, react-bootstrap and data from OpenWeatherMap API. The application allows a user to view current and forecasted weather data for a searched city.",
        "technologies": ["JavaScript", "React", "OpenWeatherMap API", "Moment.js"],
        "repo": "https://github.com/lauramparker/React-Weather-App",
        "deploy": "https://my-react-weather-app-lmp.herokuapp.com/"
    },
    {
        "title": "Garden State",
        "image": "https://github.com/lauramparker/My-Portfolio/blob/main/public/gifs/Garden-State.gif",
        "description": "Garden-State is a MERN application featuring advanced React hooks, providers, MongoDB, and React-bootstrap. Users can design gardens with specific dimensions by selecting plants and assigning them to plots. Plant spacing and recomendations also provided.",
        "technologies": ["React", "MongoDB", "Express/Node.js", "AuthO"],
        "repo": "https://github.com/lauramparker/Garden-State-LMP",
        "deploy": "https://dashboard.heroku.com/apps/garden-state-lmp"
    },
    {
        "title": "Brewfinder",
        "image": "https://github.com/lauramparker/My-Portfolio/blob/main/public/gifs/BREWFINDER.gif",
        "description": "Brewfinder is a simple Javascript application that uses Ajax to call a third-party API and retrieve listings of local breweries generated when the user enters a zipcode. Dynamic HTML elements are created using JQuery, and user favorites are stored with local storage.",
        "technologies": ["JavaScript", "JQuery", "Ajax", "UIKit"],
        "repo": "https://github.com/lauramparker/New-Brewfinder/",
        "deploy": "https://lauramparker.github.io/New-Brewfinder/"
    },
    {
        "title": "Budget Tracker",
        "image": "https://github.com/lauramparker/My-Portfolio/blob/main/public/gifs/Budget-Tracker.gif",
        "description": "Budget-Tracker is a Node.js progressive web application that allows a user to enter budget expenses/income. It features MongoDB, Express, and a service-worker to cache views and user entries offline, and syncing the data when the user is online again.",
        "technologies": ["JavaScript", "Express/Node.js", "MongoDB", "IndexedDB"],
        "repo": "https://github.com/lauramparker/budget-tracker",
        "deploy": "https://immense-basin-97081.herokuapp.com/"
    },
    {
        "title": "MVC - Hamburger",
        "image": "https://github.com/lauramparker/My-Portfolio/blob/main/public/gifs/MVC-Hamburgers.gif",
        "description": "MVC-Hamburger is a Node CRUD application with a MongoDB data schema and Handlebars template engine. This application was my first example of standard model-view-control architecture. It allows a user to create and track a list of favorite burgers.",
        "technologies": ["JavaScript", "Express/Node.js", "MongoDB", "Handlebars"],
        "repo": "https://github.com/lauramparker/MVC-Hamburger",
        "deploy": "https://vast-peak-78616.herokuapp.com/"
    }
]